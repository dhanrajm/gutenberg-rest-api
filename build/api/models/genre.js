import debug from "debug";
import { DataTypes, Model } from "sequelize";
import db from "../../db";
import { GenreBookModel } from "./GenreBook";
import { BookModel } from "./book";
const log = debug("api:models:genre");
export class GenreModel extends Model {
}
export default class GenreRecord {
    static init() {
        GenreModel.init({
            id: {
                type: DataTypes.INTEGER,
                primaryKey: true,
                allowNull: false,
            },
            name: {
                type: DataTypes.STRING(128),
                allowNull: false,
            },
        }, {
            tableName: "books_subject",
            timestamps: false,
            underscored: true,
            sequelize: db.getDriver(),
        });
    }
    static addRelationships() {
        GenreModel.belongsToMany(BookModel, {
            through: GenreBookModel,
            foreignKey: "subject_id",
        });
    }
    static format(record) {
        const genre = {
            id: record.getDataValue("id"),
            name: record.getDataValue("name"),
        };
        return genre;
    }
    getOne() {
        log("called");
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2VucmUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvYXBpL21vZGVscy9nZW5yZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEtBQUssTUFBTSxPQUFPLENBQUM7QUFDMUIsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQWEsTUFBTSxXQUFXLENBQUM7QUFDeEQsT0FBTyxFQUFFLE1BQU0sVUFBVSxDQUFDO0FBRTFCLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFDN0MsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLFFBQVEsQ0FBQztBQUVuQyxNQUFNLEdBQUcsR0FBRyxLQUFLLENBQUMsa0JBQWtCLENBQUMsQ0FBQztBQUV0QyxNQUFNLE9BQU8sVUFBVyxTQUFRLEtBQUs7Q0FBRztBQUV4QyxNQUFNLENBQUMsT0FBTyxPQUFPLFdBQVc7SUFDOUIsTUFBTSxDQUFDLElBQUk7UUFDVCxVQUFVLENBQUMsSUFBSSxDQUNiO1lBQ0UsRUFBRSxFQUFFO2dCQUNGLElBQUksRUFBRSxTQUFTLENBQUMsT0FBTztnQkFDdkIsVUFBVSxFQUFFLElBQUk7Z0JBQ2hCLFNBQVMsRUFBRSxLQUFLO2FBQ2pCO1lBQ0QsSUFBSSxFQUFFO2dCQUNKLElBQUksRUFBRSxTQUFTLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQztnQkFDM0IsU0FBUyxFQUFFLEtBQUs7YUFDakI7U0FDRixFQUNEO1lBQ0UsU0FBUyxFQUFFLGVBQWU7WUFDMUIsVUFBVSxFQUFFLEtBQUs7WUFDakIsV0FBVyxFQUFFLElBQUk7WUFDakIsU0FBUyxFQUFFLEVBQUUsQ0FBQyxTQUFTLEVBQWU7U0FDdkMsQ0FDRixDQUFDO0lBQ0osQ0FBQztJQUNELE1BQU0sQ0FBQyxnQkFBZ0I7UUFDckIsVUFBVSxDQUFDLGFBQWEsQ0FBQyxTQUFTLEVBQUU7WUFDbEMsT0FBTyxFQUFFLGNBQWM7WUFDdkIsVUFBVSxFQUFFLFlBQVk7U0FDekIsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztJQUNELE1BQU0sQ0FBQyxNQUFNLENBQUMsTUFBa0I7UUFDOUIsTUFBTSxLQUFLLEdBQUc7WUFDWixFQUFFLEVBQUUsTUFBTSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUM7WUFDN0IsSUFBSSxFQUFFLE1BQU0sQ0FBQyxZQUFZLENBQUMsTUFBTSxDQUFDO1NBQ2xDLENBQUM7UUFFRixPQUFPLEtBQUssQ0FBQztJQUNmLENBQUM7SUFDRCxNQUFNO1FBQ0osR0FBRyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ2hCLENBQUM7Q0FDRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBkZWJ1ZyBmcm9tIFwiZGVidWdcIjtcclxuaW1wb3J0IHsgRGF0YVR5cGVzLCBNb2RlbCwgU2VxdWVsaXplIH0gZnJvbSBcInNlcXVlbGl6ZVwiO1xyXG5pbXBvcnQgZGIgZnJvbSBcIi4uLy4uL2RiXCI7XHJcbmltcG9ydCB7IEdlbnJlIH0gZnJvbSBcIi4uLy4uL3R5cGVzXCI7XHJcbmltcG9ydCB7IEdlbnJlQm9va01vZGVsIH0gZnJvbSBcIi4vR2VucmVCb29rXCI7XHJcbmltcG9ydCB7IEJvb2tNb2RlbCB9IGZyb20gXCIuL2Jvb2tcIjtcclxuXHJcbmNvbnN0IGxvZyA9IGRlYnVnKFwiYXBpOm1vZGVsczpnZW5yZVwiKTtcclxuXHJcbmV4cG9ydCBjbGFzcyBHZW5yZU1vZGVsIGV4dGVuZHMgTW9kZWwge31cclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEdlbnJlUmVjb3JkIHtcclxuICBzdGF0aWMgaW5pdCgpIHtcclxuICAgIEdlbnJlTW9kZWwuaW5pdChcclxuICAgICAge1xyXG4gICAgICAgIGlkOiB7XHJcbiAgICAgICAgICB0eXBlOiBEYXRhVHlwZXMuSU5URUdFUixcclxuICAgICAgICAgIHByaW1hcnlLZXk6IHRydWUsXHJcbiAgICAgICAgICBhbGxvd051bGw6IGZhbHNlLFxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgbmFtZToge1xyXG4gICAgICAgICAgdHlwZTogRGF0YVR5cGVzLlNUUklORygxMjgpLFxyXG4gICAgICAgICAgYWxsb3dOdWxsOiBmYWxzZSxcclxuICAgICAgICB9LFxyXG4gICAgICB9LFxyXG4gICAgICB7XHJcbiAgICAgICAgdGFibGVOYW1lOiBcImJvb2tzX3N1YmplY3RcIixcclxuICAgICAgICB0aW1lc3RhbXBzOiBmYWxzZSxcclxuICAgICAgICB1bmRlcnNjb3JlZDogdHJ1ZSxcclxuICAgICAgICBzZXF1ZWxpemU6IGRiLmdldERyaXZlcigpIGFzIFNlcXVlbGl6ZSxcclxuICAgICAgfVxyXG4gICAgKTtcclxuICB9XHJcbiAgc3RhdGljIGFkZFJlbGF0aW9uc2hpcHMoKSB7XHJcbiAgICBHZW5yZU1vZGVsLmJlbG9uZ3NUb01hbnkoQm9va01vZGVsLCB7XHJcbiAgICAgIHRocm91Z2g6IEdlbnJlQm9va01vZGVsLFxyXG4gICAgICBmb3JlaWduS2V5OiBcInN1YmplY3RfaWRcIixcclxuICAgIH0pO1xyXG4gIH1cclxuICBzdGF0aWMgZm9ybWF0KHJlY29yZDogR2VucmVNb2RlbCk6IEdlbnJlIHtcclxuICAgIGNvbnN0IGdlbnJlID0ge1xyXG4gICAgICBpZDogcmVjb3JkLmdldERhdGFWYWx1ZShcImlkXCIpLFxyXG4gICAgICBuYW1lOiByZWNvcmQuZ2V0RGF0YVZhbHVlKFwibmFtZVwiKSxcclxuICAgIH07XHJcblxyXG4gICAgcmV0dXJuIGdlbnJlO1xyXG4gIH1cclxuICBnZXRPbmUoKSB7XHJcbiAgICBsb2coXCJjYWxsZWRcIik7XHJcbiAgfVxyXG59XHJcbiJdfQ==